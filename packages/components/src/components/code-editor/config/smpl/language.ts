import { TokenProvider } from '../config.types';
//this definition is written in the Monarch implementation

export const smplLanguageDefinition: TokenProvider = {
  keywords: [
    'alert',
    'true',
    'false',
    'null',
    'is',
    'not',
    'and',
    'or',
    'in',
    'with',
    'if',
    'elif',
    'else',
    'for',
    'foreach',
    'int',
    'num',
    'str',
    'count',
    'empty',
    'keys',
    'values',
    'dedup',
    'now',
    'isoparse',
    'fail',
    'jmespath',
    'jp',
    'jq',
    //from jmespath since it is integrated into SMPL
    '&expression',
    'abs',
    'search',
    'avg',
    'contains',
    'ceil',
    'floor',
    'ends_with',
    'join',
    'keys',
    'length',
    'map',
    'max',
    'max_by',
    'merge',
    'min',
    'min_by',
    'not_null',
    'reverse',
    'sort',
    'sort_by',
    'starts_with',
    'sum',
    'to_array',
    'to_string',
    'to_number',
    'type',
    'values',
  ],
  operators: ['==', '!=', '+', '-', '*', '/', '<', '>', '<=', '>='],
  tokenizer: {
    root: [{ include: 'common' }],
    common: [
      [/"[^"]+"/, 'strings'],
      [/(?=\D|])(\.)(?=\w)/, 'key'],
      [
        /[a-z_$][\w$]*/,
        {
          cases: {
            '@keywords': 'keywords',
            '@default': 'identifier',
          },
        },
      ],
      [
        /[=><!~?:s&|+\-*/^%]+/,
        {
          cases: {
            '@operators': 'operators',
            '@default': 'symbols',
          },
        },
      ],
      [/\d+(_+\d+)*/, 'digits'],
      [/[()[\]{}]/, 'bracket'],
      [/#(.*)/, 'comment'],
    ],
  },
};
